[{"/Users/dmarceo/Desktop/VS_code/comment/comment/src/index.js":"1","/Users/dmarceo/Desktop/VS_code/comment/comment/src/App.js":"2","/Users/dmarceo/Desktop/VS_code/comment/comment/src/reportWebVitals.js":"3","/Users/dmarceo/Desktop/VS_code/comment/comment/src/components/PostComment.js":"4","/Users/dmarceo/Desktop/VS_code/comment/comment/src/components/TopComment.js":"5","/Users/dmarceo/Desktop/VS_code/comment/comment/src/redux/configureStore.js":"6","/Users/dmarceo/Desktop/VS_code/comment/comment/src/shared/comments.js":"7","/Users/dmarceo/Desktop/VS_code/comment/comment/src/components/Main.js":"8","/Users/dmarceo/Desktop/VS_code/comment/comment/src/redux/comments.js":"9","/Users/dmarceo/Desktop/VS_code/comment/comment/src/redux/ActionTypes.js":"10","/Users/dmarceo/Desktop/VS_code/comment/comment/src/redux/ActionCreators.js":"11"},{"size":547,"mtime":1608422673865,"results":"12","hashOfConfig":"13"},{"size":536,"mtime":1608445508356,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608250569810,"results":"15","hashOfConfig":"13"},{"size":3412,"mtime":1608598672366,"results":"16","hashOfConfig":"13"},{"size":1111,"mtime":1608592900241,"results":"17","hashOfConfig":"13"},{"size":259,"mtime":1608506357940,"results":"18","hashOfConfig":"13"},{"size":224,"mtime":1608531143170,"results":"19","hashOfConfig":"13"},{"size":867,"mtime":1608595447909,"results":"20","hashOfConfig":"13"},{"size":442,"mtime":1608595720102,"results":"21","hashOfConfig":"13"},{"size":41,"mtime":1608506661199,"results":"22","hashOfConfig":"13"},{"size":239,"mtime":1608531056880,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"fbsbiu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/dmarceo/Desktop/VS_code/comment/comment/src/index.js",[],["49","50"],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/App.js",[],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/reportWebVitals.js",[],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/components/PostComment.js",["51","52"],"import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport { Control, LocalForm } from 'react-redux-form';\n\nfunction RenderComments({comments, addComment}) {\n    if (comments) {\n        return (\n            <div className=\"col-sm-12\">\n                <h4>Comments</h4>\n                    {\n                        comments.map(comment => {\n                            return (\n                                <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-12 \">\n                                        <Card style={{ \n                                            backgroundColor: '#1982C4',\n                                            borderColor: '#fff',\n                                            borderRadius: '0.75rem',\n                                            padding: '0.5rem 0.5rem 0.5rem',\n                                            marginBottom: '20px'\n                                            }}>\n                                            <CardBody>\n                                                <img src=\"./images/random.jpeg\" alt=\"random\" height=\"50px\" />\n                                                <CardTitle tag=\"h3\">{comment.author}</CardTitle>\n                                                <CardText>{comment.text}</CardText>\n                                            </CardBody>\n                                        </Card>\n                                    </div>\n                                </div>\n                            </div>\n                            );\n                        })\n                    }\n                <PostComment  addComment={addComment} />\n            </div>\n        );\n    }\n    return <div />;\n}\n\nclass PostComment extends Component {\n\n    handleSubmit(values) {\n        this.props.addComment(this.props.commentId, values.author, values.text);\n        // alert('Current values is: ' + JSON.stringify(values))\n    }\n\n    render(){\n        return(\n            <div>\n                <LocalForm className=\"comment-form\" onSubmit={ values => this.handleSubmit(values) }>\n                    <div className=\"form-group\">\n                        <Control.text\n                        model=\".author\"\n                        className=\"form-control\" \n                        placeholder=\"name\" \n                        bsSize=\"lg\" \n                        id=\"name\"/>\n                    </div>\n                    <div className=\"form-group\">\n                        <Control.text\n                        model=\".comment\"\n                        className=\"form-control\"\n                        name=\"comment\" \n                        id=\"text\" \n                        rows= \"5\"\n                        placeholder=\"comment\" \n                        bsSize=\"lg\" />\n                    </div>\n                    <Button color=\"primary\" type=\"submit\">Submit</Button >\n                </LocalForm>\n            </div>\n        )\n    }\n}\n\nfunction DisplayComment(props){\n    return(\n        <div>\n            <div className=\"row\">\n            <RenderComments \n            />\n            </div>\n            <div className=\"col\">\n            <PostComment\n            addComment = {props.addComment}\n            />\n            </div>\n        </div>\n    )\n}\n\nexport default DisplayComment","/Users/dmarceo/Desktop/VS_code/comment/comment/src/components/TopComment.js",[],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/redux/configureStore.js",[],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/shared/comments.js",[],["53","54"],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/components/Main.js",[],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/redux/comments.js",[],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/redux/ActionTypes.js",[],"/Users/dmarceo/Desktop/VS_code/comment/comment/src/redux/ActionCreators.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":54,"column":25,"nodeType":"61","endLine":59,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":62,"column":25,"nodeType":"61","endLine":69,"endColumn":39},{"ruleId":"55","replacedBy":"62"},{"ruleId":"57","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement",["64"],["65"],"no-global-assign","no-unsafe-negation"]